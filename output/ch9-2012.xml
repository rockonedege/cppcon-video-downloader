<?xml version="1.0" encoding="UTF-8" ?>
<?xml-stylesheet type="text/xsl" media="screen" href="/styles/xslt/rss.xslt"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:trackback="http://madskills.com/public/xml/rss/module/trackback/" xmlns:wfw="http://wellformedweb.org/CommentAPI/" xmlns:slash="http://purl.org/rss/1.0/modules/slash/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd" xmlns:googleplay="http://www.google.com/schemas/play-podcasts/1.0" xmlns:c9="http://channel9.msdn.com">
<channel>
	<title>GoingNative 2012 Sessions (HD)</title>
    <atom:link rel="self" type="application/rss+xml" href="https://s.ch9.ms/Events/GoingNative/GoingNative-2012/RSS/mp4high"></atom:link>
    <generator>Rev9</generator>
    <description>Sessions for GoingNative 2012</description>
    <link>https://s.ch9.ms/Events/GoingNative/GoingNative-2012</link>
    <language>en</language>
		<media:thumbnail url="http://files.channel9.msdn.com/thumbnail/44f19a22-40c6-41b2-b8a3-ba7bea073685.jpg" height="165" width="220"></media:thumbnail><media:thumbnail url="http://files.channel9.msdn.com/thumbnail/08114106-d705-4584-a459-d4da313598bb.jpg" height="250" width="960"></media:thumbnail><media:thumbnail url="http://files.channel9.msdn.com/thumbnail/46be7453-052b-4e0c-9890-369442f2377f.jpg" height="75" width="100"></media:thumbnail><media:thumbnail url="http://files.channel9.msdn.com/thumbnail/d4921195-a986-49e2-9bf6-8ca49f93b609.jpg" height="60" width="960"></media:thumbnail>
  <item>
    <title>Day 2 Keynote - Herb Sutter: C++11, VC++11 and Beyond</title>
    <description><![CDATA[<div><span>This talk will cover:<br></span></div><ul><li><span>Which key features in C&#43;&#43;11 will most change the way you write code: the features that directly affect C&#43;&#43; style, coding idioms, and the guidance in pre-C&#43;&#43;11 books and articles that most needs to be updated.</span> </li><li><span>Specific guidance on each of those key features: how each one changes your code; tips on using it well; and a pitfall or two to avoid (and how).</span> </li><li><span>Status update on C&#43;&#43;11 adoption: how compilers, books, and programmers are doing, plus a few updates and projections.</span> </li><li><span>What's next for C&#43;&#43;: what's top of mind for the near future of Standard C&#43;&#43;, and why?</span> </li></ul> <img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&dcsuri=https://s.ch9.ms/Events/GoingNative/GoingNative-2012/RSS/mp4high&WT.dl=0&WT.entryid=Session:RSSView:9869496b58294f2a9ba79fe70007f84d">]]></description>
    <comments>https://s.ch9.ms/Events/GoingNative/GoingNative-2012/C-11-VC-11-and-Beyond</comments>
    <link>https://s.ch9.ms/Events/GoingNative/GoingNative-2012/C-11-VC-11-and-Beyond</link>
    <itunes:summary>This talk will cover:Which key features in C&amp;#43;&amp;#43;11 will most change the way you write code: the features that directly affect C&amp;#43;&amp;#43; style, coding idioms, and the guidance in pre-C&amp;#43;&amp;#43;11 books and articles that most needs to be updated. Specific guidance on each of those key features: how each one changes your code; tips on using it well; and a pitfall or two to avoid (and how). Status update on C&amp;#43;&amp;#43;11 adoption: how compilers, books, and programmers are doing, plus a few updates and projections. What&#39;s next for C&amp;#43;&amp;#43;: what&#39;s top of mind for the near future of Standard C&amp;#43;&amp;#43;, and why? </itunes:summary>
    <itunes:duration>5520</itunes:duration>
    <pubDate>Sun, 29 Jan 2012 00:31:00 GMT</pubDate>
    <guid isPermaLink="false">https://s.ch9.ms/Events/GoingNative/GoingNative-2012/C-11-VC-11-and-Beyond</guid>
    <dc:creator>Herb Sutter</dc:creator>
    <category>c++11</category>
    <category>c++</category>
    <enclosure url="http://video.ch9.ms/ch9/6206/8d17c664-55c8-4d6c-8fbc-9fd000166206/Day2KeynoteHerbSutter_high_ch9.mp4" length="1" type="video/mp4"></enclosure>
		<media:thumbnail url="http://files.channel9.msdn.com/thumbnail/2f92b00d-bdf3-4174-80c2-90621a018e3b.jpg" height="165" width="220"></media:thumbnail><media:thumbnail url="http://files.channel9.msdn.com/thumbnail/e634b178-6e2d-441b-a9ad-cb265077bd0f.jpg" height="288" width="512"></media:thumbnail><media:thumbnail url="http://files.channel9.msdn.com/thumbnail/9244ea29-e47d-4c7e-9d58-92d4da64c842.jpg" height="484" width="956"></media:thumbnail>
				<media:group>          
					<media:content url="http://smooth.ch9.ms/ch9/6206/8d17c664-55c8-4d6c-8fbc-9fd000166206/Day2KeynoteHerbSutter.ism/manifest" expression="full" duration="5520" fileSize="1" type="video/x-ms-wmv" medium="video"></media:content>
					<media:content url="http://video.ch9.ms/ch9/6206/8d17c664-55c8-4d6c-8fbc-9fd000166206/Day2KeynoteHerbSutter_2MB_ch9.wmv" expression="full" duration="5520" fileSize="1" type="video/x-ms-wmv" medium="video"></media:content>
					<media:content url="http://video.ch9.ms/ch9/6206/8d17c664-55c8-4d6c-8fbc-9fd000166206/Day2KeynoteHerbSutter_ch9.mp3" expression="full" duration="5520" fileSize="1" type="audio/mp3" medium="audio"></media:content>
					<media:content url="http://video.ch9.ms/ch9/6206/8d17c664-55c8-4d6c-8fbc-9fd000166206/Day2KeynoteHerbSutter_ch9.webm" expression="full" duration="5520" fileSize="1" type="video/webm" medium="video"></media:content>
					<media:content url="http://video.ch9.ms/ch9/6206/8d17c664-55c8-4d6c-8fbc-9fd000166206/Day2KeynoteHerbSutter_ch9.wma" expression="full" duration="5520" fileSize="1" type="audio/x-ms-wma" medium="audio"></media:content>
					<media:content url="http://video.ch9.ms/ch9/6206/8d17c664-55c8-4d6c-8fbc-9fd000166206/Day2KeynoteHerbSutter_ch9.wmv" expression="full" duration="5520" fileSize="1" type="video/x-ms-wmv" medium="video"></media:content>
					<media:content url="http://video.ch9.ms/ch9/6206/8d17c664-55c8-4d6c-8fbc-9fd000166206/Day2KeynoteHerbSutter_high_ch9.mp4" expression="full" duration="5520" fileSize="1" type="video/mp4" medium="video"></media:content>
					<media:content url="http://video.ch9.ms/ch9/6206/8d17c664-55c8-4d6c-8fbc-9fd000166206/Day2KeynoteHerbSutter_low_ch9.mp4" expression="full" duration="5520" fileSize="1" type="video/mp4" medium="video"></media:content>
					<media:content url="http://video.ch9.ms/ch9/6206/8d17c664-55c8-4d6c-8fbc-9fd000166206/Day2KeynoteHerbSutter_med_ch9.mp4" expression="full" duration="5520" fileSize="1" type="video/mp4" medium="video"></media:content>
				</media:group>
  </item>
  <item>
    <title>Clang: Defending C++ from Murphy&#39;s Million Monkeys</title>
    <description><![CDATA[<div>Were we to craft a Lenox Globe of programming languages, C&#43;&#43; might be followed by a famous cautionary phrase: Here Be Dragons. The language can be complex and daunting to programmers who are often shouldered with the task of writing large, complex programs. Those millions of code monkeys need help to resist Murphy's siren song and navigate C&#43;&#43;'s treacherous waters of memory corruption and concurrency bugs.</div><div>&nbsp;</div><div>Clang is a C&#43;&#43; compiler platform that tries to address these challenges (among others) across the spectrum of development activities. It provides fantastic diagnostics, static and dynamic program analysis, advanced rewriting and refactoring functionality, and language extensibility. Together with improvements to the language in C&#43;&#43;11 these help programmers cope with today's code and write better code tomorrow. Clang also makes it easier than ever before to evolve and evaluate new language features and extensions to make C&#43;&#43; itself better.</div><div>&nbsp;</div><div>Through this talk I'll give some background on the Clang compiler, what it does today to make writing C&#43;&#43; better, and how we're using it to help shape the C&#43;&#43; language going forward.</div> <img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&dcsuri=https://s.ch9.ms/Events/GoingNative/GoingNative-2012/RSS/mp4high&WT.dl=0&WT.entryid=Session:RSSView:11183d5455a643e69a0e9fd7015b8457">]]></description>
    <comments>https://s.ch9.ms/Events/GoingNative/GoingNative-2012/Clang-Defending-C-from-Murphy-s-Million-Monkeys</comments>
    <link>https://s.ch9.ms/Events/GoingNative/GoingNative-2012/Clang-Defending-C-from-Murphy-s-Million-Monkeys</link>
    <itunes:summary>Were we to craft a Lenox Globe of programming languages, C&amp;#43;&amp;#43; might be followed by a famous cautionary phrase: Here Be Dragons. The language can be complex and daunting to programmers who are often shouldered with the task of writing large, complex programs. Those millions of code monkeys need help to resist Murphy&#39;s siren song and navigate C&amp;#43;&amp;#43;&#39;s treacherous waters of memory corruption and concurrency bugs. Clang is a C&amp;#43;&amp;#43; compiler platform that tries to address these challenges (among others) across the spectrum of development activities. It provides fantastic diagnostics, static and dynamic program analysis, advanced rewriting and refactoring functionality, and language extensibility. Together with improvements to the language in C&amp;#43;&amp;#43;11 these help programmers cope with today&#39;s code and write better code tomorrow. Clang also makes it easier than ever before to evolve and evaluate new language features and extensions to make C&amp;#43;&amp;#43; itself better. Through this talk I&#39;ll give some background on the Clang compiler, what it does today to make writing C&amp;#43;&amp;#43; better, and how we&#39;re using it to help shape the C&amp;#43;&amp;#43; language going forward.</itunes:summary>
    <itunes:duration>3657</itunes:duration>
    <pubDate>Tue, 17 Jan 2012 16:36:00 GMT</pubDate>
    <guid isPermaLink="false">https://s.ch9.ms/Events/GoingNative/GoingNative-2012/Clang-Defending-C-from-Murphy-s-Million-Monkeys</guid>
    <dc:creator>Chandler Carruth</dc:creator>
    <category>c++11</category>
    <category>c++</category>
    <enclosure url="http://video.ch9.ms/ch9/8457/11183d54-55a6-43e6-9a0e-9fd7015b8457/GN12ChandlerCarruthClang_high_ch9.mp4" length="740646533" type="video/mp4"></enclosure>
		<media:thumbnail url="http://video.ch9.ms/ch9/8457/11183d54-55a6-43e6-9a0e-9fd7015b8457/GN12ChandlerCarruthClang_220_ch9.jpg" height="165" width="220"></media:thumbnail><media:thumbnail url="http://files.channel9.msdn.com/thumbnail/514b2a4a-ce3f-4d46-b71d-7bb0cb8d0987.jpg" height="288" width="512"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/8457/11183d54-55a6-43e6-9a0e-9fd7015b8457/GN12ChandlerCarruthClang_custom_ch9.jpg" height="484" width="956"></media:thumbnail>
				<media:group>          
					<media:content url="http://smooth.ch9.ms/ch9/8457/11183d54-55a6-43e6-9a0e-9fd7015b8457/GN12ChandlerCarruthClang.ism/manifest" expression="full" duration="3657" fileSize="7800" type="video/x-ms-wmv" medium="video"></media:content>
					<media:content url="http://video.ch9.ms/ch9/8457/11183d54-55a6-43e6-9a0e-9fd7015b8457/GN12ChandlerCarruthClang_2MB_ch9.wmv" expression="full" duration="3657" fileSize="1014581978" type="video/x-ms-wmv" medium="video"></media:content>
					<media:content url="http://video.ch9.ms/ch9/8457/11183d54-55a6-43e6-9a0e-9fd7015b8457/GN12ChandlerCarruthClang_ch9.mp3" expression="full" duration="3657" fileSize="29260467" type="audio/mp3" medium="audio"></media:content>
					<media:content url="http://video.ch9.ms/ch9/8457/11183d54-55a6-43e6-9a0e-9fd7015b8457/GN12ChandlerCarruthClang_ch9.webm" expression="full" duration="3657" fileSize="244484905" type="video/webm" medium="video"></media:content>
					<media:content url="http://video.ch9.ms/ch9/8457/11183d54-55a6-43e6-9a0e-9fd7015b8457/GN12ChandlerCarruthClang_ch9.wma" expression="full" duration="3657" fileSize="29579357" type="audio/x-ms-wma" medium="audio"></media:content>
					<media:content url="http://video.ch9.ms/ch9/8457/11183d54-55a6-43e6-9a0e-9fd7015b8457/GN12ChandlerCarruthClang_ch9.wmv" expression="full" duration="3657" fileSize="431771373" type="video/x-ms-wmv" medium="video"></media:content>
					<media:content url="http://video.ch9.ms/ch9/8457/11183d54-55a6-43e6-9a0e-9fd7015b8457/GN12ChandlerCarruthClang_high_ch9.mp4" expression="full" duration="3657" fileSize="740646533" type="video/mp4" medium="video"></media:content>
					<media:content url="http://video.ch9.ms/ch9/8457/11183d54-55a6-43e6-9a0e-9fd7015b8457/GN12ChandlerCarruthClang_low_ch9.mp4" expression="full" duration="3657" fileSize="188688211" type="video/mp4" medium="video"></media:content>
					<media:content url="http://video.ch9.ms/ch9/8457/11183d54-55a6-43e6-9a0e-9fd7015b8457/GN12ChandlerCarruthClang_med_ch9.mp4" expression="full" duration="3657" fileSize="559395710" type="video/mp4" medium="video"></media:content>
				</media:group>
  </item>
  <item>
    <title>Interactive Panel: Ask Us Anything!</title>
    <description><![CDATA[<p>To end the event, why not have all the speakers on stage to answer any questions you may have, ones that formed as your mind was bent over the last 48 hours. Here are some C&#43;&#43; titans in front of you - what are you going to ask them? What do you want to know? Ask the GoingNative 2012 speakers anything (within reason and subject to destruction by the moderator <img src="https://sec.ch9.ms/ecn/o9/content/images/emoticons/emotion-1.gif?v=c9" alt="Smiley"> ). There should be lots to talk about. Don't be shy!<br><br>This is an interactive panel. This means you, the attendee in the room or online, will be first class members of the conversation - you drive it. You ask the questions. The theme has been provided. Where do you want to take it? It's up to you.</p> <img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&dcsuri=https://s.ch9.ms/Events/GoingNative/GoingNative-2012/RSS/mp4high&WT.dl=0&WT.entryid=Session:RSSView:08a0858f93d54148ae869fd7015a355a">]]></description>
    <comments>https://s.ch9.ms/Events/GoingNative/GoingNative-2012/Interactive-Panel-Ask-Us-Anything-</comments>
    <link>https://s.ch9.ms/Events/GoingNative/GoingNative-2012/Interactive-Panel-Ask-Us-Anything-</link>
    <itunes:summary>To end the event, why not have all the speakers on stage to answer any questions you may have, ones that formed as your mind was bent over the last 48 hours. Here are some C&amp;#43;&amp;#43; titans in front of you - what are you going to ask them? What do you want to know? Ask the GoingNative 2012 speakers anything (within reason and subject to destruction by the moderator  ). There should be lots to talk about. Don&#39;t be shy!This is an interactive panel. This means you, the attendee in the room or online, will be first class members of the conversation - you drive it. You ask the questions. The theme has been provided. Where do you want to take it? It&#39;s up to you. </itunes:summary>
    <itunes:duration>5541</itunes:duration>
    <pubDate>Sun, 15 Jan 2012 19:35:00 GMT</pubDate>
    <guid isPermaLink="false">https://s.ch9.ms/Events/GoingNative/GoingNative-2012/Interactive-Panel-Ask-Us-Anything-</guid>
    <dc:creator>Herb Sutter, Bjarne Stroustrup, Andrei Alexandrescu, Stephan T. Lavavej, Andrew Sutton, Chandler Carruth, Hans Boehm</dc:creator>
    <category>c++11</category>
    <category>c++</category>
    <enclosure url="http://video.ch9.ms/ch9/355a/08a0858f-93d5-4148-ae86-9fd7015a355a/GN12PanelAskUsAnything_high_ch9.mp4" length="1478158038" type="video/mp4"></enclosure>
		<media:thumbnail url="http://video.ch9.ms/ch9/355a/08a0858f-93d5-4148-ae86-9fd7015a355a/GN12PanelAskUsAnything_220_ch9.jpg" height="165" width="220"></media:thumbnail><media:thumbnail url="http://files.channel9.msdn.com/thumbnail/891f9504-3419-46d6-93f0-4d4187f98574.jpg" height="288" width="512"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/355a/08a0858f-93d5-4148-ae86-9fd7015a355a/GN12PanelAskUsAnything_custom_ch9.jpg" height="484" width="956"></media:thumbnail>
				<media:group>          
					<media:content url="http://smooth.ch9.ms/ch9/355a/08a0858f-93d5-4148-ae86-9fd7015a355a/GN12PanelAskUsAnything.ism/manifest" expression="full" duration="5541" fileSize="7772" type="video/x-ms-wmv" medium="video"></media:content>
					<media:content url="http://video.ch9.ms/ch9/355a/08a0858f-93d5-4148-ae86-9fd7015a355a/GN12PanelAskUsAnything_2MB_ch9.wmv" expression="full" duration="5541" fileSize="2025137474" type="video/x-ms-wmv" medium="video"></media:content>
					<media:content url="http://video.ch9.ms/ch9/355a/08a0858f-93d5-4148-ae86-9fd7015a355a/GN12PanelAskUsAnything_ch9.mp3" expression="full" duration="5541" fileSize="44336116" type="audio/mp3" medium="audio"></media:content>
					<media:content url="http://video.ch9.ms/ch9/355a/08a0858f-93d5-4148-ae86-9fd7015a355a/GN12PanelAskUsAnything_ch9.webm" expression="full" duration="5541" fileSize="440001334" type="video/webm" medium="video"></media:content>
					<media:content url="http://video.ch9.ms/ch9/355a/08a0858f-93d5-4148-ae86-9fd7015a355a/GN12PanelAskUsAnything_ch9.wma" expression="full" duration="5541" fileSize="44815647" type="audio/x-ms-wma" medium="audio"></media:content>
					<media:content url="http://video.ch9.ms/ch9/355a/08a0858f-93d5-4148-ae86-9fd7015a355a/GN12PanelAskUsAnything_ch9.wmv" expression="full" duration="5541" fileSize="1205814679" type="video/x-ms-wmv" medium="video"></media:content>
					<media:content url="http://video.ch9.ms/ch9/355a/08a0858f-93d5-4148-ae86-9fd7015a355a/GN12PanelAskUsAnything_high_ch9.mp4" expression="full" duration="5541" fileSize="1478158038" type="video/mp4" medium="video"></media:content>
					<media:content url="http://video.ch9.ms/ch9/355a/08a0858f-93d5-4148-ae86-9fd7015a355a/GN12PanelAskUsAnything_low_ch9.mp4" expression="full" duration="5541" fileSize="560349746" type="video/mp4" medium="video"></media:content>
					<media:content url="http://video.ch9.ms/ch9/355a/08a0858f-93d5-4148-ae86-9fd7015a355a/GN12PanelAskUsAnything_med_ch9.mp4" expression="full" duration="5541" fileSize="1097248504" type="video/mp4" medium="video"></media:content>
				</media:group>
  </item>
  <item>
    <title>A Concept Design for C++</title>
    <description><![CDATA[<p>C&#43;&#43; does not provide facilities for directly expressing what a function template requires of its set of parameters. This is a problem that manifests itself as poor error messages, obscure bugs, lack of proper overloading, poor specification of interfaces, and maintenance problems.</p><p>Many have tried to remedy this (in many languages) by adding sets of requirements, commonly known as &quot;concepts.&quot; Many of these efforts, notably the C&#43;&#43;0x concept design, have run into trouble by focusing on the design of language features.</p><p>This talk presents the results of an effort to first focus on the design of concepts and their use; Only secondarily, we look at the design of language features to support the resulting concepts. We describe the problem, our approach to a solution, give examples of concepts for the STL algorithms and containers, and finally show an initial design of language features. We also show how we use a library implementation to test our design.</p><p>So far, this effort has involved more than a dozen people, including the father of the STL, Alex Stepanov, but we still consider it research in progress rather than a final design. This design has far fewer concepts than the C&#43;&#43;0x design and far simpler language support. The design is mathematically well founded and contains extensive semantic specifications (axioms).</p> <img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&dcsuri=https://s.ch9.ms/Events/GoingNative/GoingNative-2012/RSS/mp4high&WT.dl=0&WT.entryid=Session:RSSView:a4e5fc5129d94b159eb09fd7015871d4">]]></description>
    <comments>https://s.ch9.ms/Events/GoingNative/GoingNative-2012/A-Concept-Design-for-C-</comments>
    <link>https://s.ch9.ms/Events/GoingNative/GoingNative-2012/A-Concept-Design-for-C-</link>
    <itunes:summary>C&amp;#43;&amp;#43; does not provide facilities for directly expressing what a function template requires of its set of parameters. This is a problem that manifests itself as poor error messages, obscure bugs, lack of proper overloading, poor specification of interfaces, and maintenance problems. Many have tried to remedy this (in many languages) by adding sets of requirements, commonly known as &amp;quot;concepts.&amp;quot; Many of these efforts, notably the C&amp;#43;&amp;#43;0x concept design, have run into trouble by focusing on the design of language features. This talk presents the results of an effort to first focus on the design of concepts and their use; Only secondarily, we look at the design of language features to support the resulting concepts. We describe the problem, our approach to a solution, give examples of concepts for the STL algorithms and containers, and finally show an initial design of language features. We also show how we use a library implementation to test our design. So far, this effort has involved more than a dozen people, including the father of the STL, Alex Stepanov, but we still consider it research in progress rather than a final design. This design has far fewer concepts than the C&amp;#43;&amp;#43;0x design and far simpler language support. The design is mathematically well founded and contains extensive semantic specifications (axioms). </itunes:summary>
    <itunes:duration>3670</itunes:duration>
    <pubDate>Sun, 15 Jan 2012 19:34:00 GMT</pubDate>
    <guid isPermaLink="false">https://s.ch9.ms/Events/GoingNative/GoingNative-2012/A-Concept-Design-for-C-</guid>
    <dc:creator>Bjarne Stroustrup, Andrew Sutton</dc:creator>
    <category>c++11</category>
    <category>c++</category>
    <enclosure url="http://video.ch9.ms/ch9/71d4/a4e5fc51-29d9-4b15-9eb0-9fd7015871d4/GN12StroustrupSuttonConceptDesign_high_ch9.mp4" length="741757983" type="video/mp4"></enclosure>
		<media:thumbnail url="http://video.ch9.ms/ch9/71d4/a4e5fc51-29d9-4b15-9eb0-9fd7015871d4/GN12StroustrupSuttonConceptDesign_220_ch9.jpg" height="165" width="220"></media:thumbnail><media:thumbnail url="http://files.channel9.msdn.com/thumbnail/3b09b3c2-53c9-4e85-90e1-87621c103444.jpg" height="288" width="512"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/71d4/a4e5fc51-29d9-4b15-9eb0-9fd7015871d4/GN12StroustrupSuttonConceptDesign_custom_ch9.jpg" height="484" width="956"></media:thumbnail>
				<media:group>          
					<media:content url="http://smooth.ch9.ms/ch9/71d4/a4e5fc51-29d9-4b15-9eb0-9fd7015871d4/GN12StroustrupSuttonConceptDesign.ism/manifest" expression="full" duration="3670" fileSize="7926" type="video/x-ms-wmv" medium="video"></media:content>
					<media:content url="http://video.ch9.ms/ch9/71d4/a4e5fc51-29d9-4b15-9eb0-9fd7015871d4/GN12StroustrupSuttonConceptDesign_2MB_ch9.wmv" expression="full" duration="3670" fileSize="922222372" type="video/x-ms-wmv" medium="video"></media:content>
					<media:content url="http://video.ch9.ms/ch9/71d4/a4e5fc51-29d9-4b15-9eb0-9fd7015871d4/GN12StroustrupSuttonConceptDesign_ch9.mp3" expression="full" duration="3670" fileSize="29363249" type="audio/mp3" medium="audio"></media:content>
					<media:content url="http://video.ch9.ms/ch9/71d4/a4e5fc51-29d9-4b15-9eb0-9fd7015871d4/GN12StroustrupSuttonConceptDesign_ch9.webm" expression="full" duration="3670" fileSize="247189708" type="video/webm" medium="video"></media:content>
					<media:content url="http://video.ch9.ms/ch9/71d4/a4e5fc51-29d9-4b15-9eb0-9fd7015871d4/GN12StroustrupSuttonConceptDesign_ch9.wma" expression="full" duration="3670" fileSize="29684499" type="audio/x-ms-wma" medium="audio"></media:content>
					<media:content url="http://video.ch9.ms/ch9/71d4/a4e5fc51-29d9-4b15-9eb0-9fd7015871d4/GN12StroustrupSuttonConceptDesign_ch9.wmv" expression="full" duration="3670" fileSize="422347453" type="video/x-ms-wmv" medium="video"></media:content>
					<media:content url="http://video.ch9.ms/ch9/71d4/a4e5fc51-29d9-4b15-9eb0-9fd7015871d4/GN12StroustrupSuttonConceptDesign_high_ch9.mp4" expression="full" duration="3670" fileSize="741757983" type="video/mp4" medium="video"></media:content>
					<media:content url="http://video.ch9.ms/ch9/71d4/a4e5fc51-29d9-4b15-9eb0-9fd7015871d4/GN12StroustrupSuttonConceptDesign_low_ch9.mp4" expression="full" duration="3670" fileSize="181764353" type="video/mp4" medium="video"></media:content>
					<media:content url="http://video.ch9.ms/ch9/71d4/a4e5fc51-29d9-4b15-9eb0-9fd7015871d4/GN12StroustrupSuttonConceptDesign_med_ch9.mp4" expression="full" duration="3670" fileSize="552845612" type="video/mp4" medium="video"></media:content>
				</media:group>
  </item>
  <item>
    <title>Static If I Had a Hammer</title>
    <description><![CDATA[<p>All right, the C&#43;&#43;11 Standard is done. Can we go home? Definitely not - progress waits for no one.</p><p>For all its might, C&#43;&#43;11 is not addressing a few basic needs in template programming. For example, you'd hate to have to define a new function or indeed a whole new class wherever you need an &quot;if&quot; statement; yet, this is exactly what we do for template code. Also, conditional overloading using the likes of std::enable_if is syntactically bulky and semantically ham-fisted (as is visible with constructors and other special functions).</p><p>This talk describes a new proposal (joint work with Herb Sutter and Walter Bright): a &quot;static if&quot; construct that works much like &quot;if&quot;, just during compilation. It's reminiscent of #if, just done copiously right.<br><br>With &quot;static if&quot; a lot of generic code becomes radically simpler, which in turn enables idioms that today are too complex to be usable. This proposal for C&#43;&#43; benefits from a large body of experience within the D programming language.</p> <img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&dcsuri=https://s.ch9.ms/Events/GoingNative/GoingNative-2012/RSS/mp4high&WT.dl=0&WT.entryid=Session:RSSView:046c6a823d47416ba22e9fd4012bf5e4">]]></description>
    <comments>https://s.ch9.ms/Events/GoingNative/GoingNative-2012/Static-If-I-Had-a-Hammer</comments>
    <link>https://s.ch9.ms/Events/GoingNative/GoingNative-2012/Static-If-I-Had-a-Hammer</link>
    <itunes:summary>All right, the C&amp;#43;&amp;#43;11 Standard is done. Can we go home? Definitely not - progress waits for no one. For all its might, C&amp;#43;&amp;#43;11 is not addressing a few basic needs in template programming. For example, you&#39;d hate to have to define a new function or indeed a whole new class wherever you need an &amp;quot;if&amp;quot; statement; yet, this is exactly what we do for template code. Also, conditional overloading using the likes of std::enable_if is syntactically bulky and semantically ham-fisted (as is visible with constructors and other special functions). This talk describes a new proposal (joint work with Herb Sutter and Walter Bright): a &amp;quot;static if&amp;quot; construct that works much like &amp;quot;if&amp;quot;, just during compilation. It&#39;s reminiscent of #if, just done copiously right.With &amp;quot;static if&amp;quot; a lot of generic code becomes radically simpler, which in turn enables idioms that today are too complex to be usable. This proposal for C&amp;#43;&amp;#43; benefits from a large body of experience within the D programming language. </itunes:summary>
    <itunes:duration>3630</itunes:duration>
    <pubDate>Sun, 15 Jan 2012 19:34:00 GMT</pubDate>
    <guid isPermaLink="false">https://s.ch9.ms/Events/GoingNative/GoingNative-2012/Static-If-I-Had-a-Hammer</guid>
    <dc:creator>Andrei Alexandrescu</dc:creator>
    <category>c++11</category>
    <category>c++</category>
    <enclosure url="http://video.ch9.ms/ch9/f5e4/046c6a82-3d47-416b-a22e-9fd4012bf5e4/AndreiDay2_high_ch9.mp4" length="724712056" type="video/mp4"></enclosure>
		<media:thumbnail url="http://video.ch9.ms/ch9/f5e4/046c6a82-3d47-416b-a22e-9fd4012bf5e4/AndreiDay2_220_ch9.jpg" height="165" width="220"></media:thumbnail><media:thumbnail url="http://files.channel9.msdn.com/thumbnail/57bfafa1-4c41-4aec-a35b-f062246d40ba.jpg" height="288" width="512"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/f5e4/046c6a82-3d47-416b-a22e-9fd4012bf5e4/AndreiDay2_custom_ch9.jpg" height="484" width="956"></media:thumbnail>
				<media:group>          
					<media:content url="http://smooth.ch9.ms/ch9/f5e4/046c6a82-3d47-416b-a22e-9fd4012bf5e4/AndreiDay2.ism/manifest" expression="full" duration="3630" fileSize="7604" type="video/x-ms-wmv" medium="video"></media:content>
					<media:content url="http://video.ch9.ms/ch9/f5e4/046c6a82-3d47-416b-a22e-9fd4012bf5e4/AndreiDay2_2MB_ch9.wmv" expression="full" duration="3630" fileSize="917512683" type="video/x-ms-wmv" medium="video"></media:content>
					<media:content url="http://video.ch9.ms/ch9/f5e4/046c6a82-3d47-416b-a22e-9fd4012bf5e4/AndreiDay2_ch9.mp3" expression="full" duration="3630" fileSize="29045378" type="audio/mp3" medium="audio"></media:content>
					<media:content url="http://video.ch9.ms/ch9/f5e4/046c6a82-3d47-416b-a22e-9fd4012bf5e4/AndreiDay2_ch9.webm" expression="full" duration="3630" fileSize="226965027" type="video/webm" medium="video"></media:content>
					<media:content url="http://video.ch9.ms/ch9/f5e4/046c6a82-3d47-416b-a22e-9fd4012bf5e4/AndreiDay2_ch9.wma" expression="full" duration="3630" fileSize="29363071" type="audio/x-ms-wma" medium="audio"></media:content>
					<media:content url="http://video.ch9.ms/ch9/f5e4/046c6a82-3d47-416b-a22e-9fd4012bf5e4/AndreiDay2_ch9.wmv" expression="full" duration="3630" fileSize="403259213" type="video/x-ms-wmv" medium="video"></media:content>
					<media:content url="http://video.ch9.ms/ch9/f5e4/046c6a82-3d47-416b-a22e-9fd4012bf5e4/AndreiDay2_high_ch9.mp4" expression="full" duration="3630" fileSize="724712056" type="video/mp4" medium="video"></media:content>
					<media:content url="http://video.ch9.ms/ch9/f5e4/046c6a82-3d47-416b-a22e-9fd4012bf5e4/AndreiDay2_low_ch9.mp4" expression="full" duration="3630" fileSize="177727851" type="video/mp4" medium="video"></media:content>
					<media:content url="http://video.ch9.ms/ch9/f5e4/046c6a82-3d47-416b-a22e-9fd4012bf5e4/AndreiDay2_med_ch9.mp4" expression="full" duration="3630" fileSize="547135055" type="video/mp4" medium="video"></media:content>
				</media:group>
  </item>
  <item>
    <title>Interactive Panel: The Importance of Being Native</title>
    <description><![CDATA[<p><span>In 2011, we saw a resurgence of interest in native code - in C&#43;&#43; in 2011 and in C&#43;&#43;11.&nbsp;Is this&nbsp;&quot;C&#43;&#43; Renaissance&quot; a flash in the pan? Is it a&nbsp;long-term trend? <br><br>This is an interactive panel. This means you, the attendee in the room or online, will be first class members of the conversation - you drive it. You ask the questions. The theme has been provided. Where do you want to take it? It's up to you. </span></p> <img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&dcsuri=https://s.ch9.ms/Events/GoingNative/GoingNative-2012/RSS/mp4high&WT.dl=0&WT.entryid=Session:RSSView:4c406d5069f744009d409fd50010aeff">]]></description>
    <comments>https://s.ch9.ms/Events/GoingNative/GoingNative-2012/Interactive-Panel-The-Importance-of-Being-Native</comments>
    <link>https://s.ch9.ms/Events/GoingNative/GoingNative-2012/Interactive-Panel-The-Importance-of-Being-Native</link>
    <itunes:summary>In 2011, we saw a resurgence of interest in native code - in C&amp;#43;&amp;#43; in 2011 and in C&amp;#43;&amp;#43;11. Is this &amp;quot;C&amp;#43;&amp;#43; Renaissance&amp;quot; a flash in the pan? Is it a long-term trend? This is an interactive panel. This means you, the attendee in the room or online, will be first class members of the conversation - you drive it. You ask the questions. The theme has been provided. Where do you want to take it? It&#39;s up to you.  </itunes:summary>
    <itunes:duration>4617</itunes:duration>
    <pubDate>Thu, 12 Jan 2012 02:22:00 GMT</pubDate>
    <guid isPermaLink="false">https://s.ch9.ms/Events/GoingNative/GoingNative-2012/Interactive-Panel-The-Importance-of-Being-Native</guid>
    <dc:creator>Herb Sutter, Bjarne Stroustrup, Andrei Alexandrescu, Stephan T. Lavavej, Hans Boehm</dc:creator>
    <category>c++11</category>
    <category>c++</category>
    <enclosure url="http://video.ch9.ms/ch9/aeff/4c406d50-69f7-4400-9d40-9fd50010aeff/GN12PanelImportanceOfBeingNative_high_ch9.mp4" length="1211027172" type="video/mp4"></enclosure>
		<media:thumbnail url="http://video.ch9.ms/ch9/aeff/4c406d50-69f7-4400-9d40-9fd50010aeff/GN12PanelImportanceOfBeingNative_220_ch9.jpg" height="165" width="220"></media:thumbnail><media:thumbnail url="http://files.channel9.msdn.com/thumbnail/ea5b2857-8484-4513-87e7-b6cf2dc56bed.jpg" height="288" width="512"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/aeff/4c406d50-69f7-4400-9d40-9fd50010aeff/GN12PanelImportanceOfBeingNative_custom_ch9.jpg" height="484" width="956"></media:thumbnail>
				<media:group>          
					<media:content url="http://smooth.ch9.ms/ch9/aeff/4c406d50-69f7-4400-9d40-9fd50010aeff/GN12PanelImportanceOfBeingNative.ism/manifest" expression="full" duration="4617" fileSize="7912" type="video/x-ms-wmv" medium="video"></media:content>
					<media:content url="http://video.ch9.ms/ch9/aeff/4c406d50-69f7-4400-9d40-9fd50010aeff/GN12PanelImportanceOfBeingNative_2MB_ch9.wmv" expression="full" duration="4617" fileSize="1675613361" type="video/x-ms-wmv" medium="video"></media:content>
					<media:content url="http://video.ch9.ms/ch9/aeff/4c406d50-69f7-4400-9d40-9fd50010aeff/GN12PanelImportanceOfBeingNative_ch9.mp3" expression="full" duration="4617" fileSize="36944692" type="audio/mp3" medium="audio"></media:content>
					<media:content url="http://video.ch9.ms/ch9/aeff/4c406d50-69f7-4400-9d40-9fd50010aeff/GN12PanelImportanceOfBeingNative_ch9.webm" expression="full" duration="4617" fileSize="330597882" type="video/webm" medium="video"></media:content>
					<media:content url="http://video.ch9.ms/ch9/aeff/4c406d50-69f7-4400-9d40-9fd50010aeff/GN12PanelImportanceOfBeingNative_ch9.wma" expression="full" duration="4617" fileSize="37344699" type="audio/x-ms-wma" medium="audio"></media:content>
					<media:content url="http://video.ch9.ms/ch9/aeff/4c406d50-69f7-4400-9d40-9fd50010aeff/GN12PanelImportanceOfBeingNative_ch9.wmv" expression="full" duration="4617" fileSize="1000897135" type="video/x-ms-wmv" medium="video"></media:content>
					<media:content url="http://video.ch9.ms/ch9/aeff/4c406d50-69f7-4400-9d40-9fd50010aeff/GN12PanelImportanceOfBeingNative_high_ch9.mp4" expression="full" duration="4617" fileSize="1211027172" type="video/mp4" medium="video"></media:content>
					<media:content url="http://video.ch9.ms/ch9/aeff/4c406d50-69f7-4400-9d40-9fd50010aeff/GN12PanelImportanceOfBeingNative_low_ch9.mp4" expression="full" duration="4617" fileSize="449153906" type="video/mp4" medium="video"></media:content>
					<media:content url="http://video.ch9.ms/ch9/aeff/4c406d50-69f7-4400-9d40-9fd50010aeff/GN12PanelImportanceOfBeingNative_med_ch9.mp4" expression="full" duration="4617" fileSize="896208227" type="video/mp4" medium="video"></media:content>
				</media:group>
  </item>
  <item>
    <title>STL11: Magic &amp;&amp; Secrets</title>
    <description><![CDATA[<p>The C&#43;&#43; Standard Library expanded and evolved massively between C&#43;&#43;98/03 and C&#43;&#43;11.&nbsp; It's easy to forget the magnitude of these changes, because they happened gradually and sometimes invisibly.&nbsp; Some things (like shared_ptr, regex, and function) were developed in Boost in the early 2000s, before making their way into TR1 in 2005 and then C&#43;&#43;11.&nbsp; Other things, like container move semantics, automatically improve programs without human intervention.&nbsp; Sometimes I can hardly believe that programmers used to live without non-intrusive deterministically reference-counted smart pointers!&nbsp; We are fortunate to live in such an advanced and enlightened age.<br><br>In this presentation, I'll explore how some of the C&#43;&#43;11 Standard Library's magic works, including how the Standardization Committee fixed pair's constructors (I bet you think that pair is the simplest type in the world - ha! wrong!) and how I saved a million zillion bytes of memory across all the programs using VC10&#43;'s make_shared&lt;T&gt;().<br><br>Oh, and I will also reveal a secret that has never been announced before.</p> <img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&dcsuri=https://s.ch9.ms/Events/GoingNative/GoingNative-2012/RSS/mp4high&WT.dl=0&WT.entryid=Session:RSSView:e5f3aeb9591742ee85d99fd4012da855">]]></description>
    <comments>https://s.ch9.ms/Events/GoingNative/GoingNative-2012/STL11-Magic-Secrets</comments>
    <link>https://s.ch9.ms/Events/GoingNative/GoingNative-2012/STL11-Magic-Secrets</link>
    <itunes:summary>The C&amp;#43;&amp;#43; Standard Library expanded and evolved massively between C&amp;#43;&amp;#43;98/03 and C&amp;#43;&amp;#43;11.  It&#39;s easy to forget the magnitude of these changes, because they happened gradually and sometimes invisibly.  Some things (like shared_ptr, regex, and function) were developed in Boost in the early 2000s, before making their way into TR1 in 2005 and then C&amp;#43;&amp;#43;11.  Other things, like container move semantics, automatically improve programs without human intervention.  Sometimes I can hardly believe that programmers used to live without non-intrusive deterministically reference-counted smart pointers!  We are fortunate to live in such an advanced and enlightened age.In this presentation, I&#39;ll explore how some of the C&amp;#43;&amp;#43;11 Standard Library&#39;s magic works, including how the Standardization Committee fixed pair&#39;s constructors (I bet you think that pair is the simplest type in the world - ha! wrong!) and how I saved a million zillion bytes of memory across all the programs using VC10&amp;#43;&#39;s make_shared&amp;lt;T&amp;gt;().Oh, and I will also reveal a secret that has never been announced before. </itunes:summary>
    <itunes:duration>3547</itunes:duration>
    <pubDate>Wed, 11 Jan 2012 00:44:00 GMT</pubDate>
    <guid isPermaLink="false">https://s.ch9.ms/Events/GoingNative/GoingNative-2012/STL11-Magic-Secrets</guid>
    <dc:creator>Stephan T. Lavavej</dc:creator>
    <category>c++11</category>
    <category>c++</category>
    <enclosure url="http://video.ch9.ms/ch9/a855/e5f3aeb9-5917-42ee-85d9-9fd4012da855/GoingNative2012STL11_high_ch9.mp4" length="772454220" type="video/mp4"></enclosure>
		<media:thumbnail url="http://video.ch9.ms/ch9/a855/e5f3aeb9-5917-42ee-85d9-9fd4012da855/GN12STLSTL11MagicAndSecrets_220_ch9.jpg" height="165" width="220"></media:thumbnail><media:thumbnail url="http://files.channel9.msdn.com/thumbnail/e34e8b07-c40f-4ed2-bedc-72d77a1f1606.jpg" height="288" width="512"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/a855/e5f3aeb9-5917-42ee-85d9-9fd4012da855/GN12STLSTL11MagicAndSecrets_custom_ch9.jpg" height="484" width="956"></media:thumbnail>
				<media:group>          
					<media:content url="http://smooth.ch9.ms/ch9/a855/e5f3aeb9-5917-42ee-85d9-9fd4012da855/GoingNative2012STL11.ism/manifest" expression="full" duration="3547" fileSize="7744" type="video/x-ms-wmv" medium="video"></media:content>
					<media:content url="http://video.ch9.ms/ch9/a855/e5f3aeb9-5917-42ee-85d9-9fd4012da855/GoingNative2012STL11_2MB_ch9.wmv" expression="full" duration="3547" fileSize="1050205092" type="video/x-ms-wmv" medium="video"></media:content>
					<media:content url="http://video.ch9.ms/ch9/a855/e5f3aeb9-5917-42ee-85d9-9fd4012da855/GoingNative2012STL11_ch9.mp3" expression="full" duration="3547" fileSize="28378103" type="audio/mp3" medium="audio"></media:content>
					<media:content url="http://video.ch9.ms/ch9/a855/e5f3aeb9-5917-42ee-85d9-9fd4012da855/GoingNative2012STL11_ch9.webm" expression="full" duration="3547" fileSize="251086688" type="video/webm" medium="video"></media:content>
					<media:content url="http://video.ch9.ms/ch9/a855/e5f3aeb9-5917-42ee-85d9-9fd4012da855/GoingNative2012STL11_ch9.wma" expression="full" duration="3547" fileSize="28687171" type="audio/x-ms-wma" medium="audio"></media:content>
					<media:content url="http://video.ch9.ms/ch9/a855/e5f3aeb9-5917-42ee-85d9-9fd4012da855/GoingNative2012STL11_ch9.wmv" expression="full" duration="3547" fileSize="507162709" type="video/x-ms-wmv" medium="video"></media:content>
					<media:content url="http://video.ch9.ms/ch9/a855/e5f3aeb9-5917-42ee-85d9-9fd4012da855/GoingNative2012STL11_high_ch9.mp4" expression="full" duration="3547" fileSize="772454220" type="video/mp4" medium="video"></media:content>
					<media:content url="http://video.ch9.ms/ch9/a855/e5f3aeb9-5917-42ee-85d9-9fd4012da855/GoingNative2012STL11_low_ch9.mp4" expression="full" duration="3547" fileSize="205431495" type="video/mp4" medium="video"></media:content>
					<media:content url="http://video.ch9.ms/ch9/a855/e5f3aeb9-5917-42ee-85d9-9fd4012da855/GoingNative2012STL11_med_ch9.mp4" expression="full" duration="3547" fileSize="577706523" type="video/mp4" medium="video"></media:content>
				</media:group>
  </item>
  <item>
    <title>Variadic Templates are Funadic</title>
    <description><![CDATA[<p>Variadic templates are arguably the most profound change in the core language brought about by C&#43;&#43;11. Curiously, however, the C&#43;&#43; community still tiptoes carefully around them: variadic templates enjoyed less coverage than features such as &quot;auto&quot; or lambdas. Part of the reason is that more popular features simplify expression of existing designs, which makes said features easier to understand and use.<br><br>Variadic templates, however, not only simplify design and use of advanced libraries such as Boost MPL, but also enable a host of new uses.<br><br>This talk provides a solid coverage of variadic fundamentals, including typelists, the archetypal &quot;safe printf&quot; mechanics, and tuple construction and access. It also discusses more advanced uses, such as structured argument lists.</p> <img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&dcsuri=https://s.ch9.ms/Events/GoingNative/GoingNative-2012/RSS/mp4high&WT.dl=0&WT.entryid=Session:RSSView:7feb4b38591d478f83419fd4012d5174">]]></description>
    <comments>https://s.ch9.ms/Events/GoingNative/GoingNative-2012/Variadic-Templates-are-Funadic</comments>
    <link>https://s.ch9.ms/Events/GoingNative/GoingNative-2012/Variadic-Templates-are-Funadic</link>
    <itunes:summary>Variadic templates are arguably the most profound change in the core language brought about by C&amp;#43;&amp;#43;11. Curiously, however, the C&amp;#43;&amp;#43; community still tiptoes carefully around them: variadic templates enjoyed less coverage than features such as &amp;quot;auto&amp;quot; or lambdas. Part of the reason is that more popular features simplify expression of existing designs, which makes said features easier to understand and use.Variadic templates, however, not only simplify design and use of advanced libraries such as Boost MPL, but also enable a host of new uses.This talk provides a solid coverage of variadic fundamentals, including typelists, the archetypal &amp;quot;safe printf&amp;quot; mechanics, and tuple construction and access. It also discusses more advanced uses, such as structured argument lists. </itunes:summary>
    <itunes:duration>3634</itunes:duration>
    <pubDate>Wed, 11 Jan 2012 00:43:00 GMT</pubDate>
    <guid isPermaLink="false">https://s.ch9.ms/Events/GoingNative/GoingNative-2012/Variadic-Templates-are-Funadic</guid>
    <dc:creator>Andrei Alexandrescu</dc:creator>
    <category>c++11</category>
    <category>c++</category>
    <enclosure url="http://video.ch9.ms/ch9/5174/7feb4b38-591d-478f-8341-9fd4012d5174/GN12AndreiAlexandrescuVariadicTemplates_high_ch9.mp4" length="760207409" type="video/mp4"></enclosure>
		<media:thumbnail url="http://video.ch9.ms/ch9/5174/7feb4b38-591d-478f-8341-9fd4012d5174/GN12AndreiAlexandrescuVariadicTemplates_220_ch9.jpg" height="165" width="220"></media:thumbnail><media:thumbnail url="http://files.channel9.msdn.com/thumbnail/3d8866a9-1019-41d8-93af-3d5d416cef68.jpg" height="288" width="512"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/5174/7feb4b38-591d-478f-8341-9fd4012d5174/GN12AndreiAlexandrescuVariadicTemplates_custom_ch9.jpg" height="484" width="956"></media:thumbnail>
				<media:group>          
					<media:content url="http://smooth.ch9.ms/ch9/5174/7feb4b38-591d-478f-8341-9fd4012d5174/GN12AndreiAlexandrescuVariadicTemplates.ism/manifest" expression="full" duration="3634" fileSize="8010" type="video/x-ms-wmv" medium="video"></media:content>
					<media:content url="http://video.ch9.ms/ch9/5174/7feb4b38-591d-478f-8341-9fd4012d5174/GN12AndreiAlexandrescuVariadicTemplates_2MB_ch9.wmv" expression="full" duration="3634" fileSize="1046771852" type="video/x-ms-wmv" medium="video"></media:content>
					<media:content url="http://video.ch9.ms/ch9/5174/7feb4b38-591d-478f-8341-9fd4012d5174/GN12AndreiAlexandrescuVariadicTemplates_ch9.mp3" expression="full" duration="3634" fileSize="29074647" type="audio/mp3" medium="audio"></media:content>
					<media:content url="http://video.ch9.ms/ch9/5174/7feb4b38-591d-478f-8341-9fd4012d5174/GN12AndreiAlexandrescuVariadicTemplates_ch9.webm" expression="full" duration="3634" fileSize="241967721" type="video/webm" medium="video"></media:content>
					<media:content url="http://video.ch9.ms/ch9/5174/7feb4b38-591d-478f-8341-9fd4012d5174/GN12AndreiAlexandrescuVariadicTemplates_ch9.wma" expression="full" duration="3634" fileSize="29393109" type="audio/x-ms-wma" medium="audio"></media:content>
					<media:content url="http://video.ch9.ms/ch9/5174/7feb4b38-591d-478f-8341-9fd4012d5174/GN12AndreiAlexandrescuVariadicTemplates_ch9.wmv" expression="full" duration="3634" fileSize="469803235" type="video/x-ms-wmv" medium="video"></media:content>
					<media:content url="http://video.ch9.ms/ch9/5174/7feb4b38-591d-478f-8341-9fd4012d5174/GN12AndreiAlexandrescuVariadicTemplates_high_ch9.mp4" expression="full" duration="3634" fileSize="760207409" type="video/mp4" medium="video"></media:content>
					<media:content url="http://video.ch9.ms/ch9/5174/7feb4b38-591d-478f-8341-9fd4012d5174/GN12AndreiAlexandrescuVariadicTemplates_low_ch9.mp4" expression="full" duration="3634" fileSize="207134903" type="video/mp4" medium="video"></media:content>
					<media:content url="http://video.ch9.ms/ch9/5174/7feb4b38-591d-478f-8341-9fd4012d5174/GN12AndreiAlexandrescuVariadicTemplates_med_ch9.mp4" expression="full" duration="3634" fileSize="565263134" type="video/mp4" medium="video"></media:content>
				</media:group>
  </item>
  <item>
    <title>Threads and Shared Variables in C++11</title>
    <description><![CDATA[<p>The C&#43;&#43;11 standard introduces threads into the language, and carefully defines the meaning of variables shared between threads. The design is based on the idea that meaningful multithreaded programs should, by default, behave as though threads were executed in simple interleaved fashion. This allows efficient execution only because &quot;data races&quot; (simultaneous non-read-only accesses to shared variables) are disallowed.&nbsp; Although this basic approach is shared with some other languages, and with threads interfaces like pthreads, we tried hard to avoid their mistakes.&nbsp; For example, C&#43;&#43;11 provides a comprehensive atomic operations library, which makes it much more feasible to avoid data races in real low-level code.</p><p>I'll give a very quick overview of thread support in C&#43;&#43;11, and then focus on the behavior of shared variables, often called the &quot;memory model&quot;. I'll try to explain why, after more than 40 years of programming with shared variables, shared variables and atomic operations were still controversial, and why the C&#43;&#43;11 approach is the right one.</p> <img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&dcsuri=https://s.ch9.ms/Events/GoingNative/GoingNative-2012/RSS/mp4high&WT.dl=0&WT.entryid=Session:RSSView:8ceeaa3d551e4184a9649fd4012cb54e">]]></description>
    <comments>https://s.ch9.ms/Events/GoingNative/GoingNative-2012/Threads-and-Shared-Variables-in-C-11</comments>
    <link>https://s.ch9.ms/Events/GoingNative/GoingNative-2012/Threads-and-Shared-Variables-in-C-11</link>
    <itunes:summary>The C&amp;#43;&amp;#43;11 standard introduces threads into the language, and carefully defines the meaning of variables shared between threads. The design is based on the idea that meaningful multithreaded programs should, by default, behave as though threads were executed in simple interleaved fashion. This allows efficient execution only because &amp;quot;data races&amp;quot; (simultaneous non-read-only accesses to shared variables) are disallowed.  Although this basic approach is shared with some other languages, and with threads interfaces like pthreads, we tried hard to avoid their mistakes.  For example, C&amp;#43;&amp;#43;11 provides a comprehensive atomic operations library, which makes it much more feasible to avoid data races in real low-level code. I&#39;ll give a very quick overview of thread support in C&amp;#43;&amp;#43;11, and then focus on the behavior of shared variables, often called the &amp;quot;memory model&amp;quot;. I&#39;ll try to explain why, after more than 40 years of programming with shared variables, shared variables and atomic operations were still controversial, and why the C&amp;#43;&amp;#43;11 approach is the right one. </itunes:summary>
    <itunes:duration>3598</itunes:duration>
    <pubDate>Wed, 11 Jan 2012 00:43:00 GMT</pubDate>
    <guid isPermaLink="false">https://s.ch9.ms/Events/GoingNative/GoingNative-2012/Threads-and-Shared-Variables-in-C-11</guid>
    <dc:creator>Hans Boehm</dc:creator>
    <category>c++11</category>
    <category>c++</category>
    <enclosure url="http://video.ch9.ms/ch9/b54e/8ceeaa3d-551e-4184-a964-9fd4012cb54e/GoingNative2012ThreadsSharedVar_high_ch9.mp4" length="738152422" type="video/mp4"></enclosure>
		<media:thumbnail url="http://video.ch9.ms/ch9/b54e/8ceeaa3d-551e-4184-a964-9fd4012cb54e/GoingNative2012ThreadsSharedVar_220_ch9.jpg" height="165" width="220"></media:thumbnail><media:thumbnail url="http://files.channel9.msdn.com/thumbnail/02033d7d-4cfc-47e8-95b2-80d14d709380.jpg" height="288" width="512"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/b54e/8ceeaa3d-551e-4184-a964-9fd4012cb54e/GoingNative2012ThreadsSharedVar_custom_ch9.jpg" height="484" width="956"></media:thumbnail>
				<media:group>          
					<media:content url="http://smooth.ch9.ms/ch9/b54e/8ceeaa3d-551e-4184-a964-9fd4012cb54e/GoingNative2012ThreadsSharedVar.ism/manifest" expression="full" duration="3598" fileSize="7898" type="video/x-ms-wmv" medium="video"></media:content>
					<media:content url="http://video.ch9.ms/ch9/b54e/8ceeaa3d-551e-4184-a964-9fd4012cb54e/GoingNative2012ThreadsSharedVar_2MB_ch9.wmv" expression="full" duration="3598" fileSize="951320213" type="video/x-ms-wmv" medium="video"></media:content>
					<media:content url="http://video.ch9.ms/ch9/b54e/8ceeaa3d-551e-4184-a964-9fd4012cb54e/GoingNative2012ThreadsSharedVar_ch9.mp3" expression="full" duration="3598" fileSize="28792321" type="audio/mp3" medium="audio"></media:content>
					<media:content url="http://video.ch9.ms/ch9/b54e/8ceeaa3d-551e-4184-a964-9fd4012cb54e/GoingNative2012ThreadsSharedVar_ch9.webm" expression="full" duration="3598" fileSize="214004531" type="video/webm" medium="video"></media:content>
					<media:content url="http://video.ch9.ms/ch9/b54e/8ceeaa3d-551e-4184-a964-9fd4012cb54e/GoingNative2012ThreadsSharedVar_ch9.wma" expression="full" duration="3598" fileSize="29107731" type="audio/x-ms-wma" medium="audio"></media:content>
					<media:content url="http://video.ch9.ms/ch9/b54e/8ceeaa3d-551e-4184-a964-9fd4012cb54e/GoingNative2012ThreadsSharedVar_ch9.wmv" expression="full" duration="3598" fileSize="421931021" type="video/x-ms-wmv" medium="video"></media:content>
					<media:content url="http://video.ch9.ms/ch9/b54e/8ceeaa3d-551e-4184-a964-9fd4012cb54e/GoingNative2012ThreadsSharedVar_high_ch9.mp4" expression="full" duration="3598" fileSize="738152422" type="video/mp4" medium="video"></media:content>
					<media:content url="http://video.ch9.ms/ch9/b54e/8ceeaa3d-551e-4184-a964-9fd4012cb54e/GoingNative2012ThreadsSharedVar_low_ch9.mp4" expression="full" duration="3598" fileSize="161684618" type="video/mp4" medium="video"></media:content>
					<media:content url="http://video.ch9.ms/ch9/b54e/8ceeaa3d-551e-4184-a964-9fd4012cb54e/GoingNative2012ThreadsSharedVar_med_ch9.mp4" expression="full" duration="3598" fileSize="537874241" type="video/mp4" medium="video"></media:content>
				</media:group>
  </item>
  <item>
    <title>Day 1 Keynote - Bjarne Stroustrup: C++11 Style</title>
    <description><![CDATA[<p>We know how to write bad code: litter our programs with casts, macros, pointers, naked new and deletes, and complicated control structures. Alternatively (or additionally), we could obscure every design decision in a mess of deeply nested abstractions using the latest object-oriented programming and generic programming tricks. Then, for good measure, we might complicate our algorithms with interesting special cases. Such code is incomprehensible, unmaintainable, usually inefficient, and not uncommon.</p><p>But how do we write good code? What principles, techniques, and idioms can we exploit to make it easier to produce quality code? In this presentation, I make an argument for type-rich interfaces, compact data structures, integrated resource management and error handling, and highly-structured algorithmic code. I illustrate my ideas and guidelines with a few idiomatic code examples.</p><p>I use C&#43;&#43;11 freely. Examples include auto, general constant expressions, uniform initialization, type aliases, type safe threading, and user-defined literals. C&#43;&#43;11 features are only just starting to appear in production compilers, so some of my suggestions are conjecture. Developing a &quot;modern style,&quot; however, is essential if we don't want to maintain newly-written 1970s and 1980s style code in 2020.</p><p>This presentation reflects my thoughts on what &quot;Modern C&#43;&#43;&quot; should mean in the 2010s: a language for programming based on light-weight abstraction with direct and efficient mapping to hardware, suitable for infrastructure code.</p> <img src="http://m.webtrends.com/dcs1wotjh10000w0irc493s0e_6x1g/njs.gif?dcssip=channel9.msdn.com&dcsuri=https://s.ch9.ms/Events/GoingNative/GoingNative-2012/RSS/mp4high&WT.dl=0&WT.entryid=Session:RSSView:ed5c3dc33335493b9e2c9fd00012252f">]]></description>
    <comments>https://s.ch9.ms/Events/GoingNative/GoingNative-2012/Keynote-Bjarne-Stroustrup-Cpp11-Style</comments>
    <link>https://s.ch9.ms/Events/GoingNative/GoingNative-2012/Keynote-Bjarne-Stroustrup-Cpp11-Style</link>
    <itunes:summary>We know how to write bad code: litter our programs with casts, macros, pointers, naked new and deletes, and complicated control structures. Alternatively (or additionally), we could obscure every design decision in a mess of deeply nested abstractions using the latest object-oriented programming and generic programming tricks. Then, for good measure, we might complicate our algorithms with interesting special cases. Such code is incomprehensible, unmaintainable, usually inefficient, and not uncommon. But how do we write good code? What principles, techniques, and idioms can we exploit to make it easier to produce quality code? In this presentation, I make an argument for type-rich interfaces, compact data structures, integrated resource management and error handling, and highly-structured algorithmic code. I illustrate my ideas and guidelines with a few idiomatic code examples. I use C&amp;#43;&amp;#43;11 freely. Examples include auto, general constant expressions, uniform initialization, type aliases, type safe threading, and user-defined literals. C&amp;#43;&amp;#43;11 features are only just starting to appear in production compilers, so some of my suggestions are conjecture. Developing a &amp;quot;modern style,&amp;quot; however, is essential if we don&#39;t want to maintain newly-written 1970s and 1980s style code in 2020. This presentation reflects my thoughts on what &amp;quot;Modern C&amp;#43;&amp;#43;&amp;quot; should mean in the 2010s: a language for programming based on light-weight abstraction with direct and efficient mapping to hardware, suitable for infrastructure code. </itunes:summary>
    <itunes:duration>5388</itunes:duration>
    <pubDate>Tue, 10 Jan 2012 00:41:00 GMT</pubDate>
    <guid isPermaLink="false">https://s.ch9.ms/Events/GoingNative/GoingNative-2012/Keynote-Bjarne-Stroustrup-Cpp11-Style</guid>
    <dc:creator>Bjarne Stroustrup</dc:creator>
    <category>c++11</category>
    <category>c++</category>
    <enclosure url="http://video.ch9.ms/ch9/252f/ed5c3dc3-3335-493b-9e2c-9fd00012252f/GoingNative2012KeynoteStroustrup_high_ch9.mp4" length="1209093537" type="video/mp4"></enclosure>
		<media:thumbnail url="http://video.ch9.ms/ch9/252f/ed5c3dc3-3335-493b-9e2c-9fd00012252f/GoingNative2012KeynoteStroustrup_220_ch9.jpg" height="165" width="220"></media:thumbnail><media:thumbnail url="http://files.channel9.msdn.com/thumbnail/3cfc4b61-1578-4d45-8b68-c9902c3d9069.jpg" height="288" width="512"></media:thumbnail><media:thumbnail url="http://video.ch9.ms/ch9/252f/ed5c3dc3-3335-493b-9e2c-9fd00012252f/GoingNative2012KeynoteStroustrup_custom_ch9.jpg" height="484" width="956"></media:thumbnail>
				<media:group>          
					<media:content url="http://smooth.ch9.ms/ch9/252f/ed5c3dc3-3335-493b-9e2c-9fd00012252f/GoingNative2012KeynoteStroustrup.ism/manifest" expression="full" duration="5388" fileSize="7912" type="video/x-ms-wmv" medium="video"></media:content>
					<media:content url="http://video.ch9.ms/ch9/252f/ed5c3dc3-3335-493b-9e2c-9fd00012252f/GoingNative2012KeynoteStroustrup_2MB_ch9.wmv" expression="full" duration="5388" fileSize="1644978320" type="video/x-ms-wmv" medium="video"></media:content>
					<media:content url="http://video.ch9.ms/ch9/252f/ed5c3dc3-3335-493b-9e2c-9fd00012252f/GoingNative2012KeynoteStroustrup_ch9.mp3" expression="full" duration="5388" fileSize="43107040" type="audio/mp3" medium="audio"></media:content>
					<media:content url="http://video.ch9.ms/ch9/252f/ed5c3dc3-3335-493b-9e2c-9fd00012252f/GoingNative2012KeynoteStroustrup_ch9.webm" expression="full" duration="5388" fileSize="355071893" type="video/webm" medium="video"></media:content>
					<media:content url="http://video.ch9.ms/ch9/252f/ed5c3dc3-3335-493b-9e2c-9fd00012252f/GoingNative2012KeynoteStroustrup_ch9.wma" expression="full" duration="5388" fileSize="43577997" type="audio/x-ms-wma" medium="audio"></media:content>
					<media:content url="http://video.ch9.ms/ch9/252f/ed5c3dc3-3335-493b-9e2c-9fd00012252f/GoingNative2012KeynoteStroustrup_ch9.wmv" expression="full" duration="5388" fileSize="871973753" type="video/x-ms-wmv" medium="video"></media:content>
					<media:content url="http://video.ch9.ms/ch9/252f/ed5c3dc3-3335-493b-9e2c-9fd00012252f/GoingNative2012KeynoteStroustrup_high_ch9.mp4" expression="full" duration="5388" fileSize="1209093537" type="video/mp4" medium="video"></media:content>
					<media:content url="http://video.ch9.ms/ch9/252f/ed5c3dc3-3335-493b-9e2c-9fd00012252f/GoingNative2012KeynoteStroustrup_low_ch9.mp4" expression="full" duration="5388" fileSize="371515437" type="video/mp4" medium="video"></media:content>
					<media:content url="http://video.ch9.ms/ch9/252f/ed5c3dc3-3335-493b-9e2c-9fd00012252f/GoingNative2012KeynoteStroustrup_med_ch9.mp4" expression="full" duration="5388" fileSize="885202211" type="video/mp4" medium="video"></media:content>
				</media:group>
  </item>    
</channel>
</rss>